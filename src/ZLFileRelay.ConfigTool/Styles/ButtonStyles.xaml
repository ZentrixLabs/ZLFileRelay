<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="http://schemas.modernwpf.com/2019">

    <!-- Icon Button Base Style -->
    <Style x:Key="IconButtonBase" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- Primary Button Style (for main actions) -->
    <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource AccentButtonStyle}">
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- Secondary Button Style (for supporting actions) -->
    <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource IconButtonBase}">
        <!-- Inherits default button style -->
    </Style>

    <!-- Destructive Button Style (for dangerous/irreversible actions) -->
    <Style x:Key="DestructiveButton" TargetType="Button" BasedOn="{StaticResource IconButtonBase}">
        <Setter Property="Foreground" Value="#D13438"/>
        <Setter Property="BorderBrush" Value="#D13438"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFF6F6"/>
                <Setter Property="BorderBrush" Value="#A92B2F"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FFEBEB"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#C0C0C0"/>
                <Setter Property="BorderBrush" Value="#C0C0C0"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Subtle Button Style (for low-priority actions) -->
    <Style x:Key="SubtleButton" TargetType="Button">
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="MinWidth" Value="80"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundListLowBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource SystemControlBackgroundListMediumBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Icon + Text Button Template -->
    <ControlTemplate x:Key="IconButtonTemplate" TargetType="Button">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="4"
                Padding="{TemplateBinding Padding}">
            <StackPanel Orientation="Horizontal" 
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <TextBlock x:Name="Icon" 
                           FontFamily="Segoe MDL2 Assets"
                           FontSize="16"
                           Text="{TemplateBinding Tag}"
                           VerticalAlignment="Center"
                           Margin="0,0,8,0"
                           Visibility="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToVisibilityConverter}}"/>
                <ContentPresenter VerticalAlignment="Center"/>
            </StackPanel>
        </Border>
    </ControlTemplate>

</ResourceDictionary>

